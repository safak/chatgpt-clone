import type { Jwt, JwtPayload } from '@clerk/types';
import { TokenVerificationError } from '../errors';
import type { JwtReturnType } from './types';
export declare function hasValidSignature(jwt: Jwt, key: JsonWebKey | string): Promise<JwtReturnType<boolean, Error>>;
export declare function decodeJwt(token: string): JwtReturnType<Jwt, TokenVerificationError>;
export type VerifyJwtOptions = {
    audience?: string | string[];
    authorizedParties?: string[];
    clockSkewInMs?: number;
    key: JsonWebKey | string;
};
export declare function verifyJwt(token: string, options: VerifyJwtOptions): Promise<JwtReturnType<JwtPayload, TokenVerificationError>>;
//# sourceMappingURL=verifyJwt.d.ts.map